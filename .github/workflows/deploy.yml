name: Deploy Frontend

on:
  push:
    branches:
      - main
      - deploy-front

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-front
      cancel-in-progress: true

    env:
      AWS_REGION: us-east-2
      S3_BUCKET: letterbox-movies-prod-2025
      CF_DIST_ID: E3VXJRORKU2FU7

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Instala pnpm para que exista en PATH ANTES de usar cache: pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # 2) Ahora sÃ­, Node con cache para pnpm (ya existe el binario)
      - name: Setup Node (con cache pnpm)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - run: pnpm -v

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
      
      - name: Build
        run: pnpm run build   # Vite -> dist/

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::377318184937:role/Movies-letterbox-Prod
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3 (CLI)
        run: aws s3 sync ./dist s3://${{ env.S3_BUCKET }} --delete

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_DIST_ID }} --paths "/*"
